// Dimensions

@each $name, $value in $proportional_widths {
	.cw-#{$name} > * {
		width: $value;
	}
	@each $gutter_label, $gutter_value in $gutters {
		.grid-#{$gutter_label}.cw-#{$name} > * {
			width: calc(#{$value} - #{$gutter_value});
		}
	}
}

@each $name in $responsive-proportional-width-classes {
	@each $breakpoint_label, $breakpoint_value in $breakpoints {
		@media (min-width: $breakpoint_value){
			.cw-#{$name}\@#{$breakpoint_label} > * {
				width: map-get($proportional_widths, $name);
			}
			@each $gutter_label, $gutter_value in $gutters {
				.grid-#{$gutter_label}.cw-#{$name}\@#{$breakpoint_label} > * {
					width: calc(#{map-get($proportional_widths, $name)} - #{$gutter_value});
				}
			}
		}
	}
}

@each $name, $value in $proportional_widths {
	.w-#{$name} {
		width: $value;
	}
	@each $gutter_label, $gutter_value in $gutters {
		.grid-#{$gutter_label} .w-#{$name} {
			width: calc(#{$value} - #{$gutter_value});
		}
	}
}

@each $name in $responsive-proportional-width-classes {
	@each $breakpoint_label, $breakpoint_value in $breakpoints {
		@media (min-width: $breakpoint_value){
			.w-#{$name}\@#{$breakpoint_label} {
				width: map-get($proportional_widths, $name);
			}
			@each $gutter_label, $gutter_value in $gutters {
				.grid-#{$gutter_label} .w-#{$name}\@#{$breakpoint_label} {
					width: calc(#{map-get($proportional_widths, $name)} - #{$gutter_value});
				}
			}
		}
	}
}

@each $name, $value in $widths {
	.w-#{$name} {
		max-width: $value;
	}
}

@each $name in $responsive-width-classes {
	@each $breakpoint_label, $breakpoint_value in $breakpoints {
		@media (min-width: $breakpoint_value){
			.w-#{$name}\@#{$breakpoint_label} {
				max-width: map-get($widths, $name);
			}
		}
	}
}

@each $name, $value in $heights {
	.h-#{$name} {
		height: $value;
	}
}

@each $name in $responsive-height-classes {
	@each $breakpoint_label, $breakpoint_value in $breakpoints {
		@media (min-width: $breakpoint_value){
			.h-#{$name}\@#{$breakpoint_label} {
				height: map-get($heights, $name);
			}
		}
	}
}

// Backgrounds

@each $name, $value in $colors {
	.bg-#{$name} {
		background-color: $value;
		color: map-get($background-text-color, $name);
	}
}

@each $name in $responsive-color-classes {
	@each $breakpoint_label, $breakpoint_value in $breakpoints {
		@media (min-width: $breakpoint_value){
			.bg-#{$name}\@#{$breakpoint_label} {
				background-color: map-get($colors, $name);
				color: map-get($background-text-color, $name);
			}
		}
	}
}

// Box Styles

.box {
	box-shadow: $global-box-shadow;
	border-radius: $global-box-radius;
	padding: $global-box-padding;
}

// Utility

.container {
	margin-left: auto;
	margin-right: auto;
}

.clear:before,
.clear:after {
  content: ".";    
  display: block;    
  height: 0;    
  overflow: hidden;        
}
.clear:after { clear: both; }
.clear { zoom: 1 ;}